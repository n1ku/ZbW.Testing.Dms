using System;
using System.Linq;
using System.Windows.Forms;
using System.Windows.Forms.VisualStyles;
using System.Windows.Input;
using System.Xml;
using System.Xml.Linq;
using System.Xml.XPath;

namespace ZbW.Testing.Dms.Client.Model
{
    public class Configuration
    {
        private string _repoLocationPath;
        private XDocument _configXml;
        private string _userName;
        private string _configFilePath;


        public Configuration(string usr)
        {
            _userName = usr;
            ConfigXml = new XDocument();
            if (!ConfigXmlExists()) GenerateConfigFile();
            else GetConfigRepoValue();


        }

        public Configuration() { }


        public string UserName => _userName;


        public string ConfigFilePath
        {
            get => _configFilePath;
            set => _configFilePath = value;
        }

        public string RepoLocationPath
        {
            get => _repoLocationPath;
            set => _repoLocationPath = value;
        }

        public XDocument ConfigXml
        {
            get => _configXml;
            set => _configXml = value;
        }

  

        public void DefineRepositoryPathDialog()
        {
            if (!ConfigXmlExists()) GenerateConfigFile();
            using (var fld = new FolderBrowserDialog())
            {
                fld.ShowNewFolderButton = true;
                DialogResult result = fld.ShowDialog();

                if (result == DialogResult.OK && !string.IsNullOrWhiteSpace(fld.SelectedPath))
                {
                    RepoLocationPath = fld.SelectedPath;
                    SetConfigRepoValue();
                }
            }
        }

        public void GenerateConfigFile()
        {
            if (!ConfigXmlExists())
            {
                ConfigXml.Add(new XComment("Holds user settings || generated by DMS"));
                ConfigXml.Add(new XElement("DMS",
                        new XElement("Configs",
                            new XElement("Config", new XAttribute("configAddedAt", DateTime.Now), new XAttribute("userID", UserName),
                                new XElement("User", UserName),
                                new XElement("RepositoryPath", RepoLocationPath)
                            )
                        )
                    )
                );
                ConfigXml.Save(ConfigFilePath);
            }

        }

        public string GetConfigFilePath()
        {
            string userName = Environment.UserName;
            string profilePath = "C:\\users\\" + userName;
            return profilePath + "\\DMSConfig.xml";
        }

        public bool ConfigXmlExists()
        {
            ConfigFilePath = GetConfigFilePath();
            return System.IO.File.Exists(ConfigFilePath);
        }

        public void GetConfigRepoValue()
        {
            ConfigXml = XDocument.Load(ConfigFilePath);
            XElement repo = ConfigXml.XPathSelectElement("//RepositoryPath");
            RepoLocationPath = repo?.Value;
        }

        public void SetConfigRepoValue()
        {
            ConfigXml = XDocument.Load(ConfigFilePath);
            XElement repo = ConfigXml.XPathSelectElement("//RepositoryPath");
            if (repo != null) repo.Value = RepoLocationPath;
            ConfigXml.Save(ConfigFilePath);
        }

        public XDocument GetConfigXml()
        {
            ConfigXml = XDocument.Load(ConfigFilePath);
            if (ConfigXml != null) return ConfigXml;
            return null;
        }
    }
}